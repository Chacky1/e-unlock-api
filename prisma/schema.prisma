// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int          @id @default(autoincrement())
  code      String       @unique
  email     String       @unique
  firstName String?
  lastName  String?
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @updatedAt @map("updated_at")
  deletedAt DateTime?    @map("deleted_at")
  courses   UserCourse[]
  orders    Order[]

  @@map("users")
}

model Course {
  id          Int          @id @default(autoincrement())
  name        String
  slug        String
  issue       String?      @db.Text
  description String?      @db.Text
  solution    String?      @db.Text
  price       Int
  priceCode   String?      @map("price_code")
  imageUrl    String?      @map("image_url")
  videoUrl    String?      @map("video_url")
  active      Boolean      @default(false)
  categoryId  Int          @map("category_id")
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  publishedAt DateTime?    @map("published_at")
  users       UserCourse[]
  sections    Section[]
  category    Category     @relation(fields: [categoryId], references: [id])
  orders      Order[]

  @@map("courses")
}

model UserCourse {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  suspendedAt DateTime? @map("suspended_at")
  user        User      @relation(fields: [userId], references: [id])
  userId      Int       @map("user_id")
  course      Course    @relation(fields: [courseId], references: [id])
  courseId    Int       @map("course_id")

  @@map("user_courses")
}

model Section {
  id          Int       @id @default(autoincrement())
  name        String
  description String?   @db.Text
  active      Boolean   @default(false)
  courseOrder Int       @map("course_order")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  publishedAt DateTime? @map("published_at")
  course      Course    @relation(fields: [courseId], references: [id])
  courseId    Int       @map("course_id")
  lessons     Lesson[]

  @@map("sections")
}

model Lesson {
  id           Int        @id @default(autoincrement())
  name         String
  textContent  String?    @map("text_content") @db.Text
  active       Boolean    @default(false)
  sectionOrder Int        @map("section_order")
  videoUrl     String?    @map("video_url")
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")
  publishedAt  DateTime?  @map("published_at")
  section      Section    @relation(fields: [sectionId], references: [id])
  sectionId    Int        @map("section_id")
  resources    Resource[]

  @@map("lessons")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  description String?  @db.Text
  imageUrl    String?  @map("image_url")
  color       String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  courses     Course[]

  @@map("categories")
}

model Order {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  user      User      @relation(fields: [userId], references: [id])
  userId    Int       @map("user_id")
  course    Course    @relation(fields: [courseId], references: [id])
  courseId  Int       @map("course_id")
  status    String

  @@map("orders")
}

model Resource {
  id        Int      @id @default(autoincrement())
  name      String
  url       String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  lessonId  Int      @map("lesson_id")
  lesson    Lesson   @relation(fields: [lessonId], references: [id])

  @@map("resources")
}
